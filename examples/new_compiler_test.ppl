box Array contains (_ Array)|Nothing

[(item) => Array {
	item
	Array {Nothing}
}

(Array {item Array {Nothing}}), (new_item) => Array {
	item
	Array {
		new_item
		Array {Nothing}
	}
}

] =>

box ByteThingy contains X|Y
box X contains Bit Bit Bit Bit Bit Bit Bit
box Y contains Bit Bit Bit Bit Bit Bit Bit

let arr = [
	ByteThingy {X {rand}},
	ByteThingy {Y {rand}}
];

(Array {item _})[0] => item
(Array {_ tail})[i] => tail[i - 1]

special print arr[0];
special print arr[rand between 0 and 1];

special print (ByteThingy bt) => if bt == X (
    println "X: " unwrap bt
) else (
    println "Y: " unwrap bt
)