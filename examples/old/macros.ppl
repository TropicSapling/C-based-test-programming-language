macro print_str {
	return {
		const constant = "This is a constant string printed using a macro.";
		println constant;
	};
}

macro force_positive (int n) {
	if n >= 0 {
		return n;
	} else {
		return 0-(n);
	}
}

macro power_of_ppl {
	
}

macro progress0 {
	print "	\x1b[0m\x1b[1m\x1b[38;5;10mLoading macros...	[=                   ]	5%\x1b[0m";
}

macro progress1 {
	print "\x1b[A\r	\x1b[0m\x1b[1m\x1b[38;5;10mLoading macros...	[====                ]	20%\x1b[0m";
}

macro progress2 {
	print "\x1b[A\r	\x1b[0m\x1b[1m\x1b[38;5;10mLoading macros...	[=======             ]	35%\x1b[0m";
}

macro progress3 {
	print "\x1b[A\r	\x1b[0m\x1b[1m\x1b[38;5;10mLoading macros...	[==========          ]	50%\x1b[0m";
}

macro progress4 {
	print "\x1b[A\r	\x1b[0m\x1b[1m\x1b[38;5;10mLoading macros...	[=============       ]	65%\x1b[0m";
}

macro progress5 {
	print "\x1b[A\r	\x1b[0m\x1b[1m\x1b[38;5;10mLoading macros...	[================    ]	80%\x1b[0m";
}

macro progress6 {
	println "\x1b[A\r	\x1b[0m\x1b[1m\x1b[38;5;10mLoading macros...	[====================]	100%\x1b[0m";
}

func init {
	macro macro_str {
		return "This string was printed in the form of a local macro.\n";
	}
	
	progress0;
	
	print_str;
	print_str;
	print_str;
	print_str;
	print_str;
	print_str;
	print_str;
	print_str;
	progress1;
	
	println macro_str;
	println macro_str;
	println macro_str;
	println macro_str;
	println macro_str;
	println macro_str;
	println macro_str;
	println macro_str;
	progress2;
	
	power_of_ppl;
	power_of_ppl;
	power_of_ppl;
	power_of_ppl;
	progress3;
	power_of_ppl;
	power_of_ppl;
	power_of_ppl;
	power_of_ppl;
	progress4;
	
	const unsigned int n = force_positive 0-123;
	println n;
	const unsigned int n = force_positive 0-123;
	println n;
	const unsigned int n = force_positive 0-123;
	println n;
	const unsigned int n = force_positive 0-123;
	println n;
	progress5;
	const unsigned int n = force_positive 0-123;
	println n;
	const unsigned int n = force_positive 0-123;
	println n;
	const unsigned int n = force_positive 0-123;
	println n;
	const unsigned int n = force_positive 0-123;
	println n;
	progress6;
}