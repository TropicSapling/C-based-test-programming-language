// func (int i) print; // Uncommented for now because apparently Rust doesn't support this

func (int i) backwards_println {
	if true { // To test if statements
		println i;
	}
	
	if 9 + 10 == 21 || 10 + 9 == 21 {
		println false;
	} else if 9 + 10 != 21 && 10 + 9 != 21 {
		println true;
	} else {
		println false;
	}
}

func (int a) (int b) +++ (int c) (int d) -> int {
	return a + b + c + d; // To test return keyword
}

func (int a) (int b) --- (int c) (int d) -> int {
	a + b - c - d
}

func init {
	(1 2 +++ 3 * 4 5)++ 6 --- 7 8 backwards_println;
	
	let res = 1 * 2 + 3 ** 4 * 5 + 6; // 'let' is necessary to allow variable shadowing, decrease bugs and make code clearer for both the compiler and the reader
	res = res + 123;
	println res;
	
	int n = 123; // 'let' is however not necessary when specifying a type since it's obvious that it's a declaration anyway
	n = n + 456;
	println n;
}